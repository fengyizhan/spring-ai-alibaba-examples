充分理解对话上下文中的编码规范、需求文档、设计文档，以及参考代码片段。
1.先不要开始进行代码生成，按照后续我的指令step by step进行代码生成（代码中TODO注释文字说明的位置，表示需要在当前位置生成代码；需要根据TODO的注释内容，并结合上下文中的文档内容，进行补全、添加或者修改代码片段。新添加的、修改的代码，要有清晰的业务逻辑注释，且标明是CodeAgent代码生成器生成的）。
2.先生成代码文件的架构蓝图、具体文件路径、文件用途说明、改动类型（是新增，还是修改，在文件后注明），供用户确认；
3.确认无误后，继续根据需求文档、设计文档，按照对话上下文中【编码规范】中的架构层次（第一层adapter[适配器层]、第二层domain[领域服务及其实现类]、第三层infra[Mapper层及其Service]、第四层client[所有供外部项目访问的三方dubbo rpc接口]），请严格按照架构层次顺序生成从上到下的顺序，依次生成每一个层涉及到的相关的代码文件，一层的代码生成完整并确认无误后再继续生成下一层；
4.每次只生成一个架构层次的所有文件，先停下来不要继续生成其他文件，我会确认当前层代码正确后，再继续下一个架构层次的所有文件（生成每一层的代码文件时，要严格根据以上提供的需求文档、设计文档、编码规范、项目说明、参考代码等，补全代码中的TODO部分，并且按照要求生成完整的能编译通过，语法正确，直接可运行的java代码以及相关配置文件等。请仅针对上文中已经存在并需要参考的代码中的Java类代码进行修改并返回完整文件内容，不要返回其他任何无关文件或代码！）；
5.在补全、修改已经存在的代码文件过程中新引入的工具类或者三方包，返回修改后的Class文件完整内容（补全类缺失的import声明），并且返回需要修改的pom文件片段；